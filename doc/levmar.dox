/** \addtogroup levmar
  * @{

\section levmar_intro Introduction

"levmar" is an excellent c language Levenberg-Marquardt non-linear least-squares package, by  Manolis Lourakis.  Several mxlib fitting routines use it.

\section getting_levmar Getting levmar

levmar can be found at <a href = "http://users.ics.forth.gr/~lourakis/levmar/"> http://users.ics.forth.gr/~lourakis/levmar/ </a>.


\section installing_levmar Installing levmar

Download the latest levmar from the above link.  I am currently on 2.6.

I typically need to edit the following lines in the Makefile, like so:
\verbatim
CFLAGS=$(CONFIGFLAGS) $(ARCHFLAGS) -O3 -funroll-loops -Wall -fPIC
AR=ar -r
RANLIB=ar -s
\endverbatim
This assumes you are using gcc.  We want a shared (.so) library, this is why we added the option -fPIC to the CFLAGS, and changed the AR to ar -r and RANLIB to ar -s.  Finally, in the liblevmar.a rule:
- delete the "crv" options to the \$(AR) command

\subsection levmarLAPACK Lapack 
To have levmar use Lapack, we need to specify where the libraries are in the makefile.  

For ATLAS:
\verbatim
LAPACKLIBS_PATH=/usr/local/atlas/lib
LAPACKLIBS=-llapack -lcblas -lf77blas  -latlas -lgfortran
\endverbatim
If you installed ATLAS somewhere else, modify accordingly. 

For MKL:
\verbatim
LAPACKLIBS_PATH=${MKLROOT}/lib/intel64
LAPACKLIBS=-Wl,--no-as-needed -lmkl_intel_ilp64 -lmkl_gnu_thread -lmkl_core -lgomp -lpthread -lm -ldl
\endverbatim
Depending on your architecture, you may need to edit the path and these flags. The <a href="https://software.intel.com/en-us/articles/intel-mkl-link-line-advisor" > MKL line advisor</a> is of great help in determining this.


\subsection levmarmt Multithreading
In levmar.h the line 
\code
#define LINSOLVERS_RETAIN_MEMORY
\endcode
should be commented out if there is any chance you will use levmar in a multithreaded program.  In particular, if you use openmp the compiler will issue a warning at this point in the header.  I always build levmar with this commented out.

\subsection levmarbuild Bulding
Type make to build.  Do not worry if it exits with an error -- as long liblevmar.a was made then everything is fine for our purposes.

Finnaly, once the build is complete, turn liblevmar.a into a shared libary like so:
\code
gcc -shared -Wl,-soname,liblevmar.so -o liblevmar.so *.o -rdynamic
\endcode

The location of liblevmar.so and levmar.h should be accessible to your compiler.  I put these in \$(HOME)/lib and in \$(HOME)/include respectively.


\section levmar_documentation levmar Documentation 

Some levmar documentation can be found at <a href="http://users.ics.forth.gr/~lourakis/levmar/">http://users.ics.forth.gr/~lourakis/levmar/</a>.  The source tree also contains documentation.

@}
*/

 
